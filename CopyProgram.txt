using Microsoft.AspNetCore.Identity;
using Microsoft.EntityFrameworkCore;
using Timbangan.Data;
using Timbangan.Domain.Repositories;
using Timbangan.Domain.Services;
using Timbangan.Helpers;
using Timbangan.Hubs;

var builder = WebApplication.CreateBuilder(args);

// Add services to the container.
builder.Services.AddControllersWithViews();
builder.Services.AddRazorPages();

var services = builder.Services;

// Add CoRS
services.AddCors();

//string conn = builder.Configuration.GetConnectionString("AppDB");

builder.Services.AddDefaultIdentity<ApplicationUser>(options =>
{
    options.SignIn.RequireConfirmedAccount = true;
    options.Password.RequireNonAlphanumeric = false;
    options.Password.RequireLowercase = true;
    options.Password.RequireUppercase = false;
    options.Password.RequireDigit = false;
})
    .AddRoles<IdentityRole>()
    .AddEntityFrameworkStores<AppDbContext>();

//services.AddDbContext<AppDbContext>(options => {
//    options.UseMySql(conn, ServerVersion.AutoDetect(conn));
//});

services.AddDbContext<AppDbContext>(options => {
    options.UseNpgsql(builder.Configuration.GetConnectionString("PostgreDB"));
});

services.AddControllers().AddJsonOptions(options => {
    options.JsonSerializerOptions.Converters.Add(new DateOnlyJsonConverter());
});

services.AddControllers().AddJsonOptions(options => {
    options.JsonSerializerOptions.Converters.Add(new TimeOnlyJsonConverter());
});

{
    services.AddScoped<IUserClaimsPrincipalFactory<ApplicationUser>, ApplicationUserClaimsPrincipalFactory>();
    services.AddScoped<ITipeKendaraan, TipeKendaraanService>();
    services.AddScoped<IStatus, StatusService>();
    services.AddScoped<IPenugasan, PenugasanService>();
    services.AddScoped<IAreaKerja, AreaKerjaService>();
    services.AddScoped<IClient, ClientService>();
    services.AddScoped<IKendaraan, KendaraanService>();
    services.AddScoped<IRoda, RodaService>();
    services.AddScoped<ITransaction, TransactionService>();
}

// Add SignalR
services.AddSignalR();
services.AddSession();

var app = builder.Build();

AppContext.SetSwitch("Npgsql.EnableLegacyTimestampBehavior", true);

// Configure the HTTP request pipeline.
if (!app.Environment.IsDevelopment())
{
    app.UseExceptionHandler("/Home/Error");
    // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.
    app.UseHsts();
}

app.UseHttpsRedirection();
app.MapHub<ScaleHub>("/hub/scale");
app.UseStaticFiles();

app.UseRouting();

app.UseAuthentication();
app.UseAuthorization();

app.UseEndpoints(endpoints => {
    endpoints.MapControllers();
    endpoints.MapDefaultControllerRoute();
    endpoints.MapRazorPages();
});

app.Run();
